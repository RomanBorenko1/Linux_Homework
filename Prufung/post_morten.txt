29 октября 2024 года, 9:00 утра — все пользователи начали получать ошибку при попытке войти на сайт.
 Мне поручено восстановить работоспособность Linux-сервера.

Первым делом я попытался подключиться к серверу, но столкнулся с ошибкой при входе.

Я попробовал зайти на сервер и столкнулся с ошибкой, связанной с неправильной работой файла LocalSettings.php.
Исходя из этой ошибки, первым делом я попробую найти этот файл и проверить, какие ошибки в нём присутствуют.
Но сперва мне нужно попасть на сервер.

В этом случае системный администратор передал мне свой приватный ключ, который я скопировал в файл ich.pem для подключения.
 После этого я попробовал зайти на сервер с помощью команды:

ssh -i ich.pem ec2-user@3.73.44.38

Я получил ошибку, связанную с правами на файл ich.pem. Командой chmod 400 ich.pem я выдал права на чтение.
 После повторного запуска ключа ssh -i ich.pem ec2-user@3.73.44.38 удалось войти на сервер.

Первым делом я выполнил команду top, чтобы просмотреть в реальном времени информацию о системных процессах,
 загрузке процессора, использовании памяти и других метриках. Ошибок не оказалось.

Затем я проверил статус процесса Apache командой service httpd status. Согласно результату, сервис был активен.
Я попытался перезапустить его через service httpd start, но получил ошибку, указывающую на проблему при запуске службы httpd.service.

Далее я посмотрел использование памяти с помощью команды df -h и обнаружил, что память занята на 100% (10 ГБ из 10 ГБ).

У меня возникла идея найти файлы, занимающие больше всего места на жостком диске.
 Но для начала я попробовал найти файл LocalSettings.php с помощью команды:

find / -mane localSettings.php  

Я получил множество папок без права доступа, поэтому я использовал команду: 
sudo find / -name localSettings.php и нашел файл в директории /var/www/html/mediawiki/LocalSettings.php.
 Перейдя туда, я проверил файл командой cat LocalSettings.php и обнаружил, что он пуст.

Обратился к системному администратору с вопросом о резервной копии файла, и он сказал что есть такой файл и ихнии названия
схожи но он не помнит точно как называются. Я использовал разные варианты команды: 

find / -name "*LocalSettings*"
find / -name "*localSet.php*"
К моей удачи этот файл оказался в той же дериктории что и я
с именем LocalSettings (5).php.

Поскольку имя LocalSettings (5).php было некорректным тоесть содержало ошибку в виде пробела,
 я использовал лайфхаком в виде кавычек, чтобы скопировать его:

cp "LocalSettings (5).php" /var/www/html/mediawiki/LocalSettings.php

При копировании снова получил ошибку, связанную с недостатком памяти. Поэтому начал искать большие файлы, которые занимали юольше всего места:

После того как я разобрался, что нужно сделать дальше — найти самые большие файлы или папки, — я воспользовался командой:

sudo find / -type f -size +100M -exec du -h {} +
Эта команда ищет все файлы, размер которых не меньше 100 MB. Я использовал sudo,
 так как при первом запуске наткнулся на ошибку, связанную с правами доступа.

В процессе я обнаружил, что файл /var/log/httpd/access_log занимает 7 гигабайт из доступных 10 гигабайт на диске.
Обнаружил, что директория /var/log/httpd/access_log занимает 7 ГБ. Этот файл собирает все логи о действиях на сервере,
 что указывает на возможную проблему со скриптом или планировщиком задач crontab.

Чтобы освободить место, я решил временно очистить файл, введя:

sudo echo "" > /var/log/httpd/access_log

В этой команде я указал, что записываю пустое значение в файл, чтобы очистить его. Эта команда перезаписывает файл.

Я снова столкнулся с проблемой доступа и решил войти от имени суперпользователя так как у меня не осталось вариантов:

sudo su
echo "" > /var/log/httpd/access_log

После этого память очистилась до 33%, что позволило мне скопировать файл LocalSettings.php. 
Однако за несколько минут свободное место снова начало сокращатся, и я понял, что сервер сможет проработать максимум пару часов.
Я решил проверить crontab и увидел запись:

* * * * * tar -czf /var/log/httpd/log_$(date +\%Y\%m\%d).tar.gz -C

Это указывает, что скрипт запускается каждую минуту
и что он создает неправильный архив.

Следующим моим шагом была попытка попасть на сайт.

При попытке зайти на сайт я заметил, что IP-адрес не соответствует и сайт не прогружается и увидел что несоответствует IP адрес 
IP http://18.153.51.162 на http://3.73.44.38 в файле скрипта который находится в дириктории /var/www/html/mediawiki/LocalSettings.php.
 Сайт заработал, но осталась проблема утечки памяти. 

Я добавил новый скрипт а также исправил ошибки в тексте скрипта и сохранил его, предварительно назвав backup_script.sh.


#!/bin/bash
LOG_DIR="/var/log"
LOG_FILE="access_log"
BACKUP_DIR="/path/to/backup"
MAX_BACKUPS=3
DATE=$(date +%Y%m%d)
ARCHIVE="$BACKUP_DIR/$LOG_FILE-$DATE.tar.gz"

# Архивируем лог файлы
tar -czf "$ARCHIVE" "$LOG_DIR/$LOG_FILE"

# Удаляем старые архивы
find "$BACKUP_DIR" -type f -name "$LOG_FILE-*.tar.gz" -mtime +3 -exec rm {} \;




 С помощью команды pwd я проверил путь: 
/home/ec2-user/back_up/backup_script.sh 
и добавил его в crontab.

0 0 * * * /home/ec2-user/back_up/beck_up_skript.sh


А старый скрипт я закомментировал. Теперь crontab  будет корректно работать один раз в сутки,
 создавая архив access_log с текущей датой и удаляя старые архивы старше трёх дней.


На выполнение этой работы у меня ушло 2 часа. Лучше быть внимательным, чтобы не переделывать работу.
